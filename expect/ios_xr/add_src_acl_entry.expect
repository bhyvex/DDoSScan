#!/usr/bin/expect -f

# Load parameters into variables
 set hostname [lindex $argv 0]
 set username [lindex $argv 1]
 set password [lindex $argv 2]
 set enablepassword [lindex $argv 3]
 set sequencenumber [lindex $argv 4]
 set ipaddress [lindex $argv 5]
 set proto [lindex $argv 6]
 set source_port [lindex $argv 7]
 set destination_port [lindex $argv 8]
 set outside_acl [lindex $argv 9]
 set protected_acl [lindex $argv 10]
 set forward_vrf [lindex $argv 11]
 set block [lindex $argv 12]

# Disable logging expect output to screen
 log_user 0

# Start SSH session without key checking
 spawn ssh -o StrictHostKeyChecking=no $username\@$hostname

# Login with SSH
 expect {
 timeout { send_user "\nConnection timeout - Check Host\n"; exit 1 }
 eof { send_user "\nSSH Connection To $hostname Failed\n"; exit 1 }
 "*#" {}
 "*assword:" {
 send "$password\n"
 expect "#"
 }
 }
 
# Change  to configure mode
 send "conf t\n"
 expect "(config)#"

# Add host to access lists

 if { $outside_acl != "" } {
    send "ipv4 access-list $outside_acl\n"
    expect "(config-ipv4-acl)#"

    if { $block == "0" } {
        send "$sequencenumber permit $proto any eq $source_port host $ipaddress nexthop1 vrf $forward_vrf\n"
        puts "$sequencenumber permit $proto any eq $source_port host $ipaddress nexthop1 vrf $forward_vrf"
    } else {
        send "$sequencenumber deny $proto any eq $source_port host $ipaddress\n"
        puts "$sequencenumber deny $proto any eq $source_port host $ipaddress"
    }
    
    expect "(config-ipv4-acl)#"
    send "commit\n"
    expect "#"
    send "end\n"
    expect "#"
    send "exit\n"
    expect ":~\$"
    exit
 } elseif { $protected_acl != "" } {
    send "ipv4 access-list $protected_acl\n"
    expect "(config-ipv4-acl)#"
    send "$sequencenumber permit $proto host $ipaddress any eq $source_port nexthop1 vrf $forward_vrf\n"
    puts "$sequencenumber permit $proto host $ipaddress any eq $source_port nexthop1 vrf $forward_vrf"
    expect "(config-ipv4-acl)#"
    send "commit\n"
    expect "#"
    send "end\n"
    expect "#"
    send "exit\n"
    expect ":~\$"
    exit
 }
